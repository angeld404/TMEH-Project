
#include "msp.h"
#include "LCD.h"
#include "delay_us.h"
#include "delay_us.c"

void LCD_Instr(int Instruction) {           //executes LCD instructions
    int Instruction1 = Instruction;
    int Instruction0 = Instruction<<4;
    P9->DIR |= LCD_DB_PORTS;
    P10->DIR |= LCD_INSTR_PORTS;
    P10->OUT &= ~LCD_INSTR_PORTS;        //set RS RW & E Low
    P9->OUT = Instruction1;
    P10->OUT |= (BIT2);     //E High
    delay_us(0);
    P10->OUT &= ~(BIT2);    //E Low
    if (Instruction == LCD_INIT_SET) {
        delay_us(40);
        return;
    }
    delay_us(0);
    P9->OUT = (Instruction0);
    P10->OUT |= (BIT2);     //E High
    delay_us(0);
    P10->OUT &= ~(BIT2);    //E Low
    delay_us(40);
}

void LCD_init() {
    LCD_Instr(LCD_INIT_SET);
    LCD_Instr(LCD_DEFAULT_SET);
    LCD_Instr(LCD_DEFAULT_SET);
    LCD_Instr(LCD_DISP_ON);
    LCD_Instr(LCD_DISP_CLEAR);
    delay_us(2100);
    LCD_Instr(LCD_SHIFT_RIGHT);
    delay_us(40);
    LCD_Instr(LCD_CURSOR_HOME);
    delay_us(40);
}

void Clear_LCD() {
    LCD_Instr(LCD_DISP_CLEAR);
}

void Home_LCD() {
    LCD_Instr(LCD_CURSOR_HOME);
}

void LCD_char_write(int Message) {

    int Message1 = Message;
    int Message0 = Message<<4;
    P9->DIR |= (BIT7 | BIT6 | BIT5 | BIT4);
    P10->DIR |= LCD_INSTR_PORTS;
    P10->OUT |= BIT0; //set RS high
    P10->OUT &= ~(BIT1 |BIT2);//set RW & E Low
    P9->OUT = (Message1);
    P10->OUT |= (BIT2); //E High
    delay_us(0);
    P10->OUT &= ~(BIT2); //E Low
    delay_us(0);
    P9->OUT = (Message0);
    P10->OUT |= (BIT2); //E High
    delay_us(0);
    P10->OUT &= ~(BIT2); //E Low
    delay_us(40);

}

void LCD_string_write(char *phrase) {
    int i;
    for(i = 0; i < strlen(phrase); i++) {
        LCD_char_write(phrase[i]);
    }
}

